import java.util.Scanner;

public class MillionaireGame {

    // Список вопросов
    private static final String[] questions = {
            "Какой город является столицей Франции?",
            "Какое число получается при сложении чисел 7 и 8?",
            "Что тяжелее: килограмм железа или килограмм перьев?",
            "Какие животные являются символами Китая?",
            "Назовите самую высокую гору мира.",
            "Как называется самая длинная река в мире?",
            "Столица Японии?",
            "Основатель Microsoft?",
            "Самая большая планета Солнечной системы?",
            "Самый большой океан Земли?",
            "Какая птица не умеет летать?",
            "Где находится Статуя Свободы?",
            "Какого цвета глаза кошек?",
            "Кто написал роман 'Преступление и наказание'?",
            "Название первого космического корабля Юрия Гагарина?",
            "Автор романа 'Война и мир'?",
            "Символ медицины?",
            "Самый маленький континент планеты Земля?",
            "Цвет флага ООН?",
            "Основной элемент таблицы Менделеева?",
            "Режиссер фильма 'Крестный отец'?",
            "Главный герой фильма 'Форрест Гамп'?",
            "Первый фильм трилогии 'Властелин колец'?",
            "Фильм Стивена Спилберга о динозаврах?",
            "Режиссёр фильма 'Титаник'?",
            "Герой Леонардо Ди Каприо в фильме 'Начало'?",
            "Последний фильм кинотрилогии 'Матрица'?",
            "Известный режиссер мультфильма 'Корпорация монстров'?",
            "Имя главного героя фильмов о Гарри Поттере?",
            "Главную роль в фильме 'Интерстеллар' сыграл..."
    };

    // Возможные варианты ответов
    private static final String[][] answers = {
            {"Москва", "Париж", "Рим", "Берлин"},
            {"15", "16", "17", "18"},
            {"Железо", "Перья", "Одинаково", "Зависит от высоты"},
            {"Кошка и собака", "Медведь и волк", "Дракон и тигр", "Лев и орел"},
            {"Эверест", "Монблан", "Фудзи", "Мак-Кинли"},
            {"Нил", "Амазонка", "Янцзы", "Миссисипи"},
            {"Токио", "Осака", "Нагоя", "Хиросима"},
            {"Билл Гейтс", "Стив Джобс", "Сергей Брин", "Маркус Перссон"},
            {"Земля", "Юпитер", "Уран", "Сатурн"},
            {"Атлантический", "Индийский", "Тихий", "Северный Ледовитый"},
            {"Попугай", "Павлин", "Страус", "Голубь"},
            {"Нью-Йорк", "Париж", "Лондон", "Рио-де-Жанейро"},
            {"Только зелёные", "Разные", "Коричневые", "Серые"},
            {"Толстой", "Достоевский", "Пушкин", "Чехов"},
            {"Союз", "Прогресс", "Восток", "Восход"},
            {"Шекспир", "Тургенев", "Толстой", "Гоголь"},
            {"Крест", "Звезда", "Сердечко", "Змея вокруг чаши"},
            {"Европа", "Австралия", "Антарктида", "Южная Америка"},
            {"Белый", "Красный", "Синий", "Оранжевый"},
            {"Водород", "Углерод", "Азот", "Кислород"},
            {"Фрэнсис Форд Коппола", "Джордж Лукас", "Квентин Тарантино", "Роберт Земекис"},
            {"Том Хэнкс", "Леонардо Ди Каприо", "Брэд Питт", "Аль Пачино"},
            {"Властелин Колец: Братство кольца", "Властелин Колец: Две крепости", "Властелин Колец: Возвращение короля", "Хоббит"},
            {"Парк Юрского периода", "Терминатор", "Инопланетянин", "Спасатели Малибу"},
            {"Джеймс Кэмерон", "Кристофер Нолан", "Райан Джонсон", "Квентин Тарантино"},
            {"Дом Кобба", "Доктор Манхэттен", "Тони Старк", "Дэвид Блэйн"},
            {"Матрица: Революция", "Матрица: Релоад", "Матрица: Восстание машин", "Матрица: Возрождение"},
            {"Пит Доктер", "Энтони Харви", "Карлос Салданха", "Джон Лассетер"},
            {"Гарри Поттер", "Рон Уизли", "Гермиона Грейнджер", "Невилл Долгопупс"},
            {"Мэттью Макконахи", "Том Хэнкс", "Киану Ривз", "Роберт Паттинсон"}
    };

    // Индексы правильных ответов
    private static final int[] correctAnswers = {1, 1, 2, 2, 0, 0, 0, 0, 1, 2, 2, 0, 1, 1, 2, 2, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};

    // Денежные вознаграждения за прохождение уровней
    private static final int[] prizes = {
            1_000,      // Уровень 1
            5_000,      // Уровень 2
            10_000,     // Уровень 3
            50_000,     // Уровень 4
            100_000,    // Уровень 5
            500_000,    // Уровень 6
            1_000_000,  // Уровень 7 (первая несгораемая сумма)
            2_000_000,  // Уровень 8
            3_000_000,  // Уровень 9
            5_000_000,  // Уровень 10
            7_000_000,  // Уровень 11
            10_000_000, // Уровень 12
            15_000_000, // Уровень 13
            20_000_000, // Уровень 14
            25_000_000, // Уровень 15
            30_000_000, // Уровень 16
            40_000_000, // Уровень 17
            50_000_000, // Уровень 18 (вторая несгораемая сумма)
            75_000_000, // Уровень 19
            100_000_000 // Уровень 20
    };

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        boolean playing = true;
        
        while (playing) {
            boolean firstSafePointReached = false;
            boolean secondSafePointReached = false;
            
            System.out.println("Добро пожаловать в игру 'Кто хочет стать миллионером?'");
            
            for (int i = 0; i < questions.length; i++) {
                System.out.println("\nВопрос №" + (i+1));
                System.out.println(questions[i]);
                
                // Показ вариантов ответов
                for (int j = 0; j < answers[i].length; j++) {
                    System.out.println((j+1) + ". " + answers[i][j]);
                }
                
                // Выбор варианта ответа игроком
                System.out.print("Ваш выбор (1-" + answers[i].length + "): ");
                int userAnswer = scanner.nextInt() - 1;
                
                if (userAnswer != correctAnswers[i]) {
                    System.out.println("Неправильно! Игра закончена.");
                    
                    // Итоговая сумма зависит от достигнутых несгораемых уровней
                    long finalPrize = 0;
                    if (secondSafePointReached) {
                        finalPrize = 50_000_000;
                    } else if (firstSafePointReached) {
                        finalPrize = 1_000_000;
                    }
                    
                    System.out.println("Итоговая сумма выигрыша: $" + finalPrize);
                    break;
                }
                
                System.out.println("Правильно! Ваш выигрыш составляет $" + prizes[i]);
                
                // Проверка достижений несгораемых сумм
                if (prizes[i] >= 1_000_000 && !firstSafePointReached) {
                    firstSafePointReached = true;
                    System.out.println("Вы достигли первой несгораемой суммы ($1 млн). Даже если ответите неправильно дальше, эта сумма останется вашей.");
                }
                if (prizes[i] >= 50_000_000 && !secondSafePointReached) {
                    secondSafePointReached = true;
                    System.out.println("Вы достигли второй несгораемой суммы ($50 млн). Теперь вы точно уйдете с этими деньгами.");
                }
                
                // Решение игрока продолжать игру или выйти
                if(i < questions.length - 1){
                    System.out.print("Хотите продолжить играть? (Да/Нет): ");
                    String choice = scanner.next();
                    
                    if (!choice.equalsIgnoreCase("Да")) {
                        System.out.println("Вы остановились на сумме $" + prizes[i]);
                        break;
                    }
                }
            }
            
            // Позиция для повторного старта игры
            System.out.print("Хотите сыграть снова? (Да/Нет): ");
            String playAgainChoice = scanner.next();
            if (!playAgainChoice.equalsIgnoreCase("Да")) {
                playing = false;
                System.out.println("Спасибо за участие! До свидания!");
            }
        }
    }
}